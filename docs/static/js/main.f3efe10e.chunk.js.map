{"version":3,"sources":["components/icon-list/index.tsx","components/simple-tile/index.tsx","components/banner/index.tsx","pages/home/index.tsx","App.tsx","components/theme/index.tsx","redux/index.js","redux/store.js","serviceWorker.ts","index.tsx"],"names":["iconMap","Map","IconLink","styled","a","props","color","IconList","icons","className","map","icon","i","key","name","href","link","get","style","Tile","div","TopRow","Category","theme","category","colors","category_color","category_color_hover","Image","img","Title","header","header_hover","ContentSection","background_image","background_color","SubTitle","sub_header","sub_header_hover","Description","text","text_hover","SimpleTile","flip","comps","title","description","subTitle","image","imageAltText","githubLink","iconList","currentTheme","length","push","src","onClick","e","alt","columns","reverse","defaultProps","Container","site_bg","SubTitleItem","subType","TextWrapper","Banner","bgImage","particals_background","Object","keys","newSubType","console","log","SiteGrid","Content","connect","state","testData","themes","bio","partical_params","default","tech","dance","shenans","tiles","tile","uuid","App","card_background_image","card_background_color","box_shadow","box_shadow_hover","Theme","children","CHANGE_THEME","initalState","store","createStore","action","type","assign","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3efe10e.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { IconProps } from '../icon/Icon';\n\nimport './index.scss';\n\nconst iconMap = new Map([ [ 'solid', 'fas' ], [ 'regular', 'far' ], [ 'brand', 'fab' ] ]);\n\nconst IconLink = styled.a`\n\ti {\n    color: ${props => (props.color) ? props.color : \"black\"};\n  }\n`;\n\nexport interface IconListProps {\n  icons: Array<IconProps>\n}\n \nconst IconList: React.SFC<IconListProps> = (props: IconListProps) => {\n\tconst { icons } = props;\n\n\treturn (\n    <span className=\"cs-icon-list\">\n      {icons.map((icon: IconProps, i: Number) => {\n        return (\n          <IconLink color={icon.color} key={`${icon.name}_${i}`} href={icon.link}>\n            <i className={`${iconMap.get(icon.style)} fa-${icon.name}`} />\n          </IconLink>\n        );\n      })}\n    </span>\n  );\n}\n\nexport default IconList;","import * as React from 'react';\nimport styled from 'styled-components';\nimport IconList from '../icon-list';\nimport { CurrentTheme } from '../../components/theme';\n\n\nexport interface SimpleTileProps {\n\ttitle?: string;\n\tsubTitle?: string;\n\tdescription?: string;\n\timage?: string;\n\tbackground_image?: string;\n\tbackground_color?: string;\n\timageAltText?: string;\n\tgithubLink: string;\n\tlink: string;\n\tcategory: string;\n\tcurrentTheme?: CurrentTheme;\n\tflip?: boolean;\n\ttheme?: any;\n\tonClick?: (e: MouseEvent) => void;\n}\n\nconst Tile = styled.div`\n\t@mixin grow($amount) {\n\t\ttransform: scale(1, 1);\n\n\t\t&:hover {\n\t\t\ttransform: scale(amount, amount);\n\t\t}\n\t}\n\n\t@mixin shiftLeft($amount) {\n\t\ttransform: translateX(0);\n\n\t\t&:hover {\n\t\t\ttransform: translateX(calc(amount * -1));\n\t\t}\n\t}\n\n\tmargin: 60px 0;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\twidth: 100%;\n\ttransition: all .2s;\n\ttransform: scale(1, 1);\n\tbox-shadow: 0 4px 15px -5px #656565;\n\n\t&:hover,\n\t&:focus {\n\t\t/* box-shadow: 0 4px 7px #656565; */\n\t\t/* transform: translateY(-1px); */\n\n\t\ttransform: scale(1.01, 1.01);\n\t\tbox-shadow: 0 4px 18px -1px #001165;\n\t}\n\n\t@media (min-width: 1281px) {\n\t\theight: 250px;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n\t\theight: 250px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n\t\theight: 200px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n\t\theight: 150px;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n\t\theight: 125px;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n\t\theight: 75px;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n\t\theight: 50px;\n\t}\n`;\n\nconst TopRow = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\n\t@media (min-width: 1281px) {\n\t\tmargin-bottom: 10px;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n\t\tmargin-bottom: 10px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n\t\tmargin-bottom: 8px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n\t\tmargin-bottom: 6px;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n\t\tmargin-bottom: 4px;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n\t\tmargin-bottom: 3px;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n\t\tmargin-bottom: 2px;\n\t}\n`;\n\n// prettier-ignore\nconst Category = styled.a<SimpleTileProps>` \n  display: inline-block;\n  font-weight: 400;\n  text-transform: uppercase;\n  color: ${(props: SimpleTileProps) => props.theme[props.category].colors.category_color};\n\n  &:hover,\n  &:focus { \n    color:  ${(props: SimpleTileProps) => props.theme[props.category].colors.category_color_hover};\n    cursor: pointer;\n    text-decoration: underline;\n  }\n\n  @media (min-width: 1281px) {\n    font-size: 14px;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n    font-size: 14px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n    font-size: 12px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n    font-size: 10px;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n    font-size: 8px;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n    font-size: 6px;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n    font-size: 6px;\n\t}\n`;\n\nconst Image = styled.img`\n\tmax-width: 500px;\n\n\t&:hover,\n\t&:focus {\n\t\tcursor: pointer;\n\t}\n\n\t@media (min-width: 1281px) {\n\t\twidth: 40%;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n\t\twidth: 45%;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n\t\twidth: 45%;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n\t\twidth: 45%;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n\t\twidth: 50%;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n\t\twidth: 50%;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n\t\twidth: 50%;\n\t}\n`;\n\nconst Title = styled.a`\n\tpadding-bottom: 5px;\n\tfont-size: 24px;\n\tfont-weight: 600;\n\tcolor: ${(props: SimpleTileProps) => props.theme[props.category].colors.header};\n\n\t&:hover,\n\t&:focus {\n\t\tcolor: ${(props: SimpleTileProps) => props.theme[props.category].colors.header_hover};\n\t\tcursor: pointer;\n\t}\n\n\t@media (min-width: 1281px) {\n\t\tfont-size: 24px;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n\t\tfont-size: 24px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n\t\tfont-size: 20px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n\t\tfont-size: 18px;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n\t\tfont-size: 14px;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n\t\tfont-size: 10px;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n\t\tfont-size: 10px;\n\t}\n`;\n\n// prettier-ignore\nconst ContentSection = styled.div<SimpleTileProps>`\n\ttext-align: left;\n\toverflow: auto;\n\tbackground: ${(props) => props.theme[props.category].background_image};\n\tbackground-color: ${(props) => props.theme[props.category].background_color};\n\tbackground-blend-mode: hard-light;\n\n\t@media (min-width: 1281px) {\n\t\tpadding: 20px;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n\t\tpadding: 20px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n\t\tpadding: 16px 20px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n\t\tpadding: 14px 20px;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n\t\tpadding: 10px 20px;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n\t\tpadding: 8px 20px;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n\t\tpadding: 4px 20px;\n\t}\n`;\n\nconst SubTitle = styled.div`\n\tpadding: 0 0 20px 0;\n\tfont-size: 10px;\n\tfont-weight: 700;\n\tcolor: ${(props: SimpleTileProps) => props.theme[props.category].colors.sub_header};\n\n\t&:hover,\n\t&:focus {\n\t\tcolor: ${(props: SimpleTileProps) => props.theme[props.category].colors.sub_header_hover};\n\t}\n\n\t@media (min-width: 1281px) {\n\t\tfont-size: 10px;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n\t\tfont-size: 10px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n\t\tfont-size: 10px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n\t\tfont-size: 8px;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n\t\tfont-size: 8px;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n\t\tfont-size: 6px;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n\t\tfont-size: 6px;\n\t}\n`;\n\nconst Description = styled.div`\n\tfont-size: 16px;\n\tfont-weight: 400;\n\tfont-family: \"Lato\", sans-serif;\n\tcolor: ${(props: SimpleTileProps) => props.theme[props.category].colors.text};\n\n\t&:hover,\n\t&:focus {\n\t\tcolor: ${(props: SimpleTileProps) => props.theme[props.category].colors.text_hover};\n\t}\n\n\t@media (min-width: 1281px) {\n\t\tfont-size: 16px;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n\t\tfont-size: 14px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n\t\tfont-size: 14px;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n\t\tfont-size: 12px;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n\t\tfont-size: 10px;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n\t\tfont-size: 8px;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n\t\tfont-size: 6px;\n\t}\n`;\n\nconst columns = (props: SimpleTileProps): Array<any> => {\n\tconst { title, description, subTitle, image, imageAltText, githubLink, link, category, currentTheme } = props;\n\n\tconst iconList = [];\n\n\tconst onClickLinkHandler = (e: MouseEvent) => {};\n\tconst onClickCateogryHandeler = (e: MouseEvent) => {};\n\n\tif (githubLink.length > 0) {\n\t\ticonList.push({\n\t\t\tlink: githubLink,\n\t\t\tcolor: 'black',\n\t\t\tname: 'github',\n\t\t\tstyle: 'brand'\n\t\t});\n\t}\n\n\tif (link.length > 0) {\n\t\ticonList.push({\n\t\t\tlink: link,\n\t\t\tcolor: 'black',\n\t\t\tname: 'link',\n\t\t\tstyle: 'solid'\n\t\t});\n\t}\n\n\treturn [\n\t\t// @ts-ignore\n\t\t<Image src={`/images/${image}`} onClick={onClickLinkHandler} alt={imageAltText} />,\n\t\t// @ts-ignore\n\t\t<ContentSection {...props}>\n\t\t\t{/*\n      // @ts-ignore */}\n\t\t\t<TopRow {...props}>\n\t\t\t\t{/*\n      // @ts-ignore */}\n\t\t\t\t<Category {...props} onClick={onClickCateogryHandeler}>\n\t\t\t\t\t{category}\n\t\t\t\t</Category>\n\t\t\t\t<IconList icons={iconList} />\n\t\t\t</TopRow>\n\t\t\t{/*\n      // @ts-ignore */}\n\t\t\t<Title {...props}>{title}</Title>\n\t\t\t{/*\n      // @ts-ignore */}\n\t\t\t<SubTitle {...props}>{subTitle}</SubTitle>\n\t\t\t{/*\n      // @ts-ignore */}\n\t\t\t<Description {...props}>{description}</Description>\n\t\t</ContentSection>\n\t];\n};\n\nconst SimpleTile: React.FunctionComponent<SimpleTileProps> = (props: SimpleTileProps) => {\n\tconst { flip } = props;\n\n\treturn (\n\t\t<Tile>\n\t\t\t{(() => {\n\t\t\t\tconst comps = columns(props);\n\t\t\t\tif (flip) {\n\t\t\t\t\treturn comps.reverse();\n\t\t\t\t}\n\t\t\t\treturn comps;\n\t\t\t})()}\n\t\t</Tile>\n\t);\n};\n\nSimpleTile.defaultProps = {\n\ttitle: '',\n\tdescription: '',\n\tsubTitle: '',\n\tgithubLink: '',\n\tlink: '',\n\timageAltText: '',\n\tflip: false\n};\n\nexport default SimpleTile;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport {CurrentThemeMap, CurrentTheme} from '../theme';\n\n\nexport interface BannerProps {\n\tbgImage?: string;\n\tparticals_background?: Object;\n\ttitle: string;\n\tsubTitle: CurrentThemeMap;\n\tcurrentTheme: string;\n}\n\nexport interface SubTitleItemProps {\n\tsubType: CurrentTheme\n}\n\n//\nconst Container =\n\tstyled.div <\n\tBannerProps >\n\t`\n\tgrid-area: 1 / 1 / 1 / 6;\n\tclip-path: ellipse(100% 87% at 15px 0%);\n  background: ${(props) => props.theme[props.currentTheme].colors.site_bg};\n\n  @media screen and (max-width: 600px) {\n    clip-path: ellipse(100% 87% at 48% 0%);\n  }\n`;\n\n// const BackgroundImage = styled.img`\n// \twidth: 100%;\n// \tposition: absolute;\n// \ttop: 0;\n// \tleft: 0;\n// \topacity: 0.2;\n// `;\n\nconst ParticalWrapper = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\topacity: 0.5;\n\tclip-path: ellipse(100% 87% at 15px 0%);\n`;\n\nconst Title = styled.div`\n\twidth: 100%;\n\tfont-size: 6rem;\n\tfont-family: 'Merienda One', 'Open Sans';\n\tfont-weight: 300;\n\tcolor: white;\n\tposition: relative;\n\tz-index: 1;\n\ttext-align: left;\n\n\t@media screen and (max-width: 600px) {\n\t\ttext-align: center;\n\t}\n`;\n\nconst SubTitleItem = styled.div<SubTitleItemProps>`\n\tmargin-top: 20px;\n\tpadding: 0 10px 0 0;\n\tfont-size: 3rem;\n\tfont-family: 'Merienda One', 'Open Sans';\n\tfont-weight: 600;\n\topacity: 1;\n\tcolor: ${props => {\n\t\treturn props.theme[props.subType].colors.sub_header\n\t}};\n\ttext-align: left;\n\tz-index: 1;\n\n\t@media screen and (max-width: 600px) {\n\t\ttext-align: center;\n\t}\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t\tcolor: ${props => {\n\t\t\treturn props.theme[props.subType].colors.sub_header_hover\n\t\t}};\n\t}\n`;\n\nconst SubTitle = styled.div`\n\twidth: 100%;\n\tfont-size: 3rem;\n\tfont-family: 'Merienda One', 'Open Sans';\n\tfont-weight: 600;\n\topacity: 1;\n\tz-index: 1;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\n\t@media screen and (max-width: 600px) {\n\t\ttext-align: center;\n\t}\n`;\n\nconst TextWrapper = styled.div`\n\tmargin: 10vh 10vw;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tflex-flow: column;\n\talign-items: flex-start;\n`;\n\nconst Banner: React.FunctionComponent<BannerProps> = (props) => {\n\tconst { bgImage, title, subTitle, particals_background } = props;\n\n\treturn (\n\t\t<Container {...props}>\n\t\t\t{/* <BackgroundImage src={bgImage} /> */}\n\t\t\t{/* <ParticalWrapper>\n\t\t\t\t<Particles params={particals_background} height=\"100vh\" />\n\t\t\t</ParticalWrapper> */}\n\t\t\t<TextWrapper>\n\t\t\t\t<Title>{title}</Title>\n\t\t\t\t<SubTitle>\n\t\t\t\t\t{\n\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\treturn Object.keys(subTitle).map((subType) => {\n\t\t\t\t\t\t\t\tconst newSubType = subType as CurrentTheme;\n\t\t\t\t\t\t\t\t{console.log(newSubType)}\n\t\t\t\t\t\t\t\tlet component = (() => {\n\t\t\t\t\t\t\t\t\t{console.log(subTitle[newSubType].length)}\n\t\t\t\t\t\t\t\t\tif (subTitle[newSubType].length > 0){\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<SubTitleItem subType={newSubType}>\n\t\t\t\t\t\t\t\t\t\t\t\t{subTitle[newSubType]}\n\t\t\t\t\t\t\t\t\t\t\t</SubTitleItem>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t\t\treturn component;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})()\n\t\t\t\t\t}\n\t\t\t\t</SubTitle>\n\t\t\t</TextWrapper>\n\t\t</Container>\n\t);\n};\n\nexport default Banner;\n\n","import React, { Component, FunctionComponent } from 'react';\nimport SimpleTile, { SimpleTileProps } from '../../components/simple-tile';\nimport testData from '../../data.json';\nimport styled from 'styled-components';\nimport { uuid } from 'uuidv4';\nimport { connect } from 'react-redux';\nimport { CurrentTheme } from '../../components/theme';\nimport Banner from '../../components/banner';\nimport './index.scss';\n\nconst SiteGrid = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: 38vh auto 400px;\n\n\t@media (min-width: 1680px) {\n\t\tgrid-template-columns: 5vw 20vw 50vw 20vw 5vw;\n\t}\n\n\t@media (min-width: 1280px) and (max-width: 1680px) {\n\t\tgrid-template-columns: 5vw 15vw 60vw 15vw 5vw;\n\t}\n\n\t@media (min-width: 1025px) and (max-width: 1280px) {\n\t\tgrid-template-columns: 5vw 10vw 70vw 10vw 5vw;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) {\n\t\tgrid-template-columns: 5vw 10vw 70vw 10vw 5vw;\n\t}\n\n\t@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n\t\tgrid-template-columns: 5vw 10vw 70vw 10vw 5vw;\n\t}\n\n\t@media (min-width: 481px) and (max-width: 767px) {\n\t\tgrid-template-columns: 5vw 10vw 70vw 10vw 5vw;\n\t}\n\n\t@media (min-width: 320px) and (max-width: 480px) {\n\t\tgrid-template-columns: 5vw 10vw 70vw 10vw 5vw;\n\t}\n\n\t@media (min-width: 0) and (max-width: 320px) {\n\t\tgrid-template-columns: 5vw 10vw 70vw 10vw 5vw;\n\t}\n`;\n\nconst Content = styled.div`\n\twidth: 100%;\n\tgrid-column-start: 3;\n\tgrid-row-start: 2;\n`;\n\ninterface HomePageProps {\n\tcurrentTheme: CurrentTheme;\n}\n\nconst HomePage: FunctionComponent<HomePageProps> = ({ currentTheme }: HomePageProps) => {\n\treturn (\n\t\t<SiteGrid>\n\t\t\t<Banner\n\t\t\t\tbgImage=\"/images/bio_bg.jpg\"\n\t\t\t\tparticals_background={testData.themes.bio.partical_params}\n\t\t\t\ttitle=\"K. Jeselle Clark\"\n\t\t\t\tsubTitle={{\n\t\t\t\t\tdefault: '',\n\t\t\t\t\tbio: 'Bio',\n\t\t\t\t\ttech: 'Tech',\n\t\t\t\t\tdance: 'Dance',\n\t\t\t\t\tshenans: 'Shenanigans'\n\t\t\t\t}}\n\t\t\t\tcurrentTheme={currentTheme}\n\t\t\t/>\n\t\t\t<Content>\n\t\t\t\t{(() => {\n\t\t\t\t\treturn testData.tiles.map((tile: SimpleTileProps, i: number) => {\n\t\t\t\t\t\treturn <SimpleTile key={uuid()} currentTheme={currentTheme} flip={i % 2 === 0} {...tile} />;\n\t\t\t\t\t});\n\t\t\t\t})()}\n\t\t\t</Content>\n\t\t</SiteGrid>\n\t);\n};\n\nconst mapStateToProps = (state: HomePageProps) => {\n\treturn { currentTheme: state.currentTheme };\n};\n\nexport default connect(mapStateToProps)(HomePage);\n","import React from 'react';\nimport './App.scss';\n// import Home from './pages/home';\n// import Books from './pages/books';\nimport Home from './pages/home';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Home />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import * as React from 'react';\nimport { ThemeProvider } from 'styled-components';\n// import theme from './theme.yml';\n\nexport type CurrentTheme = 'default' | 'dance' | 'tech' | 'bio' | 'shenans';\n\nexport interface CurrentThemeMap {\n\tdefault: string;\n\tbio: string;\n\ttech: string;\n\tdance: string;\n\tshenans: string;\n}\n\nconst theme = {\n\tdefault: {\n\t\tcolors: {\n\t\t\theader: '#000000',\n\t\t\theader_hover: '#000000',\n\t\t\tsub_header: 'pink',\n\t\t\tsub_header_hover: 'gray',\n\t\t\ttext: '#272727',\n\t\t\ttext_hover: '#272727',\n\t\t\tcard_background_image: 'bio.jpg',\n\t\t\tcard_background_color: 'green',\n\t\t\tbox_shadow: '#656565',\n\t\t\tbox_shadow_hover: '#656565',\n\t\t\tcategory_color: '#e09100',\n\t\t\tcategory_color_hover: '#e09100',\n\t\t\tsite_bg: 'linear-gradient(45deg, #4568dc, #b06ab3)'\n\t\t}\n\t},\n\tdance: {\n\t\tcolors: {\n\t\t\theader: '#000000',\n\t\t\theader_hover: '#000000',\n\t\t\tsub_header: 'magenta',\n\t\t\tsub_header_hover: 'darkmagenta',\n\t\t\ttext: '#272727',\n\t\t\ttext_hover: '#272727',\n\t\t\tbox_shadow: '#656565',\n\t\t\tbox_shadow_hover: '#656565',\n\t\t\tcategory_color: '#e09100',\n\t\t\tcategory_color_hover: '#e09100',\n\t\t\tcard_background_image: 'dance.jpg',\n\t\t\tcard_background_color: 'green',\n\t\t\tsite_bg: 'linear-gradient(45deg, #4568dc, #b06ab3)'\n\t\t}\n\t},\n\tshenans: {\n\t\tcolors: {\n\t\t\theader: '#000000',\n\t\t\theader_hover: '#000000',\n\t\t\tsub_header: 'lightblue',\n\t\t\tsub_header_hover: 'darkblue',\n\t\t\ttext: '#272727',\n\t\t\ttext_hover: '#272727',\n\t\t\tbox_shadow: '#656565',\n\t\t\tbox_shadow_hover: '#656565',\n\t\t\tcategory_color: '#e09100',\n\t\t\tcategory_color_hover: '#e09100',\n\t\t\tcard_background_image: 'dance.jpg',\n\t\t\tcard_background_color: 'green',\n\t\t\tsite_bg: 'linear-gradient(45deg, #4568dc, #b06a83)'\n\t\t}\n\t},\n\ttech: {\n\t\tcolors: {\n\t\t\theader: '#000000',\n\t\t\theader_hover: '#000000',\n\t\t\tsub_header: '#AA7700',\n\t\t\tsub_header_hover: '#CC7777',\n\t\t\ttext: '#272727',\n\t\t\ttext_hover: '#272727',\n\t\t\tbox_shadow: '#656565',\n\t\t\tbox_shadow_hover: '#656565',\n\t\t\tcategory_color: 'blue',\n\t\t\tcategory_color_hover: 'blue',\n\t\t\tcard_background_image: 'tech.jpg',\n\t\t\tcard_background_color: 'green',\n\t\t\tsite_bg: 'linear-gradient(45deg, #4568dc, #b06ab3)'\n\t\t}\n\t},\n\tbio: {\n\t\tcolors: {\n\t\t\theader: '#000000',\n\t\t\theader_hover: '#000000',\n\t\t\tsub_header: 'lightgreen',\n\t\t\tsub_header_hover: 'green',\n\t\t\ttext: '#272727',\n\t\t\ttext_hover: '#272727',\n\t\t\tbox_shadow: '#656565',\n\t\t\tbox_shadow_hover: '#656565',\n\t\t\tcategory_color: 'green',\n\t\t\tcategory_color_hover: 'green',\n\t\t\tcard_background_image: 'bio.jpg',\n\t\t\tcard_background_color: 'green',\n\t\t\tsite_bg: 'linear-gradient(60deg,#1458ce,#2fc1c1)'\n\t\t}\n\t}\n};\n\nconst Theme: React.FunctionComponent = ({ children }) => <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n\nexport default Theme;\n","// Actions\nconst CHANGE_THEME = 'jeselle-site/theme/CHANGE';\n\n// Types\n\n// currentTheme: dance, bio, something\n\nconst initalState = { currentTheme: 'bio' };\n\n// Reducer\nexport default function reducer(state = initalState, action = {}) {\n\tswitch (action.type) {\n\t\tcase CHANGE_THEME: {\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tcurrentTheme: action.currentTheme\n\t\t\t});\n\t\t}\n\t\t// do reducer stuff\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// Action Creators\nexport function changeTheme({ currentTheme }) {\n\treturn {\n\t\ttype: CHANGE_THEME,\n\t\tcurrentTheme: currentTheme\n\t};\n}\n","import { createStore } from 'redux';\nimport rootReducer from './index';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport Theme from './components/theme';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Theme>\n\t\t\t<App />\n\t\t</Theme>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}